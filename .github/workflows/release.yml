name: Release - Build & Deploy

on:
    push:
        tags:
            - "v*.*.*" # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
    contents: write

jobs:
    create-release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetch all history for proper changelog generation

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test -- --watch=false --browsers=ChromeHeadless

            - name: Build for production
              run: npm run build:production

            - name: Create tarball of build artifacts
              run: |
                  cd dist
                  tar -czf ../aula-sistemas-frontend-${{ github.ref_name }}.tar.gz .
                  cd ..

            - name: Generate changelog
              id: changelog
              run: |
                  # Extract version from tag
                  VERSION=${GITHUB_REF#refs/tags/}
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

                  # Generate simple changelog from commits since last tag
                  PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

                  if [ -z "$PREV_TAG" ]; then
                    echo "## What's Changed" > CHANGELOG.md
                    git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
                  else
                    echo "## What's Changed" > CHANGELOG.md
                    git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" >> CHANGELOG.md
                  fi

                  echo "" >> CHANGELOG.md
                  echo "" >> CHANGELOG.md
                  echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${VERSION}" >> CHANGELOG.md

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      aula-sistemas-frontend-${{ github.ref_name }}.tar.gz
                  body_path: CHANGELOG.md
                  draft: false
                  prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: production-build-${{ github.ref_name }}
                  path: dist/
                  retention-days: 90

    # Job opcional: deploy para GitHub Pages (se desejado)
    deploy-to-pages:
        runs-on: ubuntu-latest
        needs: create-release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

        # Uncomment if you want to deploy to GitHub Pages
        # permissions:
        #   contents: read
        #   pages: write
        #   id-token: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build for production
              run: npm run build:production

            # Uncomment the following steps to enable GitHub Pages deployment
            # - name: Setup Pages
            #   uses: actions/configure-pages@v4
            #
            # - name: Upload artifact
            #   uses: actions/upload-pages-artifact@v3
            #   with:
            #     path: 'dist/aula-sistemas-frontend/browser'
            #
            # - name: Deploy to GitHub Pages
            #   id: deployment
            #   uses: actions/deploy-pages@v4

            - name: Deployment info
              run: |
                  echo "âœ… Release created successfully!"
                  echo "ðŸ“¦ Build artifacts uploaded"
                  echo "ðŸš€ To enable GitHub Pages deployment, uncomment the steps in this workflow"
